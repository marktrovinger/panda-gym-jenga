_current_progress_remaining:
    value: 1
_custom_logger:
    value: "False"
_episode_num:
    value: 0
_episode_storage:
    value: None
_last_episode_starts:
    value: |-
        [ True  True  True  True  True  True  True  True  True  True  True  True
          True  True  True  True]
_last_obs:
    value: |-
        OrderedDict([('achieved_goal', array([[ 0.04434677, -0.03994135,  0.0127    ],
               [ 0.04254022,  0.07396779,  0.0127    ],
               [-0.11615762,  0.05599444,  0.0127    ],
               [ 0.01585606, -0.08185682,  0.0127    ],
               [ 0.0922237 , -0.09387976,  0.0127    ],
               [-0.05885874,  0.03674896,  0.0127    ],
               [ 0.07577346,  0.09750126,  0.0127    ],
               [ 0.00727031,  0.0904557 ,  0.0127    ],
               [ 0.03388729,  0.00084534,  0.0127    ],
               [ 0.14397842, -0.04588001,  0.0127    ],
               [ 0.024588  , -0.10874764,  0.0127    ],
               [ 0.08062568,  0.07851104,  0.0127    ],
               [ 0.02676716,  0.11541719,  0.0127    ],
               [-0.02125145, -0.08794733,  0.0127    ],
               [ 0.1052192 ,  0.07617556,  0.0127    ],
               [ 0.10114413, -0.04800469,  0.0127    ]], dtype=float32)), ('desired_goal', array([[ 0.01726384,  0.0223781 ,  0.0127    ],
               [-0.08880048,  0.14821608,  0.0127    ],
               [-0.05440141, -0.05892345,  0.0127    ],
               [ 0.09886304,  0.00914364,  0.0127    ],
               [ 0.14005263,  0.05234963,  0.0127    ],
               [-0.08067577,  0.0443422 ,  0.0127    ],
               [ 0.10806536, -0.13482437,  0.0127    ],
               [-0.08912203,  0.01724686,  0.0127    ],
               [ 0.03166853,  0.04088107,  0.0127    ],
               [-0.00696278,  0.09571781,  0.0127    ],
               [ 0.06169497, -0.10033125,  0.0127    ],
               [-0.14426166,  0.13857825,  0.0127    ],
               [-0.05790479,  0.08965604,  0.0127    ],
               [ 0.10008392, -0.12325608,  0.0127    ],
               [-0.13385618,  0.13309972,  0.0127    ],
               [-0.10211217,  0.00797575,  0.0127    ]], dtype=float32)), ('observation', array([[ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  4.43467684e-02, -3.99413481e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  4.25402187e-02,  7.39677921e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00, -1.16157621e-01,  5.59944399e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  1.58560611e-02, -8.18568245e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  9.22237039e-02, -9.38797593e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00, -5.88587448e-02,  3.67489643e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  7.57734552e-02,  9.75012630e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  7.27031007e-03,  9.04556960e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  3.38872932e-02,  8.45338276e-04,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  1.43978417e-01, -4.58800122e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  2.45879982e-02, -1.08747639e-01,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  8.06256831e-02,  7.85110444e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  2.67671552e-02,  1.15417190e-01,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00, -2.12514494e-02, -8.79473314e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  1.05219200e-01,  7.61755630e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00],
               [ 3.84396687e-02, -2.19447225e-12,  1.97400138e-01,
                 0.00000000e+00, -0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  1.01144135e-01, -4.80046943e-02,
                 1.26999998e-02,  0.00000000e+00, -0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                 0.00000000e+00]], dtype=float32))])
_last_original_obs:
    value: None
_logger:
    value: <stable_baselines3.common.logger.Logger object at 0x7468e69de560>
_n_updates:
    value: 0
_num_timesteps_at_start:
    value: 0
_stats_window_size:
    value: 100
_total_timesteps:
    value: 1.6e+06
_vec_normalize_env:
    value: None
_wandb:
    value:
        cli_version: 0.19.0
        code_path: code/scripts/test_ddpg_simple_pickandplace.py
        m: []
        python_version: 3.10.16
        t:
            "1":
                - 1
                - 55
            "2":
                - 1
                - 55
            "3":
                - 1
                - 2
                - 3
                - 16
                - 22
                - 23
                - 35
                - 55
            "4": 3.10.16
            "5": 0.19.0
            "8":
                - 5
            "12": 0.19.0
            "13": linux-x86_64
action_noise:
    value: None
action_space:
    value: Box(-1.0, 1.0, (4,), float32)
actor:
    value: |-
        Actor(
          (features_extractor): CombinedExtractor(
            (extractors): ModuleDict(
              (achieved_goal): Flatten(start_dim=1, end_dim=-1)
              (desired_goal): Flatten(start_dim=1, end_dim=-1)
              (observation): Flatten(start_dim=1, end_dim=-1)
            )
          )
          (mu): Sequential(
            (0): Linear(in_features=25, out_features=400, bias=True)
            (1): ReLU()
            (2): Linear(in_features=400, out_features=300, bias=True)
            (3): ReLU()
            (4): Linear(in_features=300, out_features=4, bias=True)
            (5): Tanh()
          )
        )
actor_batch_norm_stats:
    value: '[]'
actor_batch_norm_stats_target:
    value: '[]'
actor_target:
    value: |-
        Actor(
          (features_extractor): CombinedExtractor(
            (extractors): ModuleDict(
              (achieved_goal): Flatten(start_dim=1, end_dim=-1)
              (desired_goal): Flatten(start_dim=1, end_dim=-1)
              (observation): Flatten(start_dim=1, end_dim=-1)
            )
          )
          (mu): Sequential(
            (0): Linear(in_features=25, out_features=400, bias=True)
            (1): ReLU()
            (2): Linear(in_features=400, out_features=300, bias=True)
            (3): ReLU()
            (4): Linear(in_features=300, out_features=4, bias=True)
            (5): Tanh()
          )
        )
algo:
    value: DDPG
batch_size:
    value: 1024
buffer_size:
    value: 1000000
critic:
    value: |-
        ContinuousCritic(
          (features_extractor): CombinedExtractor(
            (extractors): ModuleDict(
              (achieved_goal): Flatten(start_dim=1, end_dim=-1)
              (desired_goal): Flatten(start_dim=1, end_dim=-1)
              (observation): Flatten(start_dim=1, end_dim=-1)
            )
          )
          (qf0): Sequential(
            (0): Linear(in_features=29, out_features=400, bias=True)
            (1): ReLU()
            (2): Linear(in_features=400, out_features=300, bias=True)
            (3): ReLU()
            (4): Linear(in_features=300, out_features=1, bias=True)
          )
        )
critic_batch_norm_stats:
    value: '[]'
critic_batch_norm_stats_target:
    value: '[]'
critic_target:
    value: |-
        ContinuousCritic(
          (features_extractor): CombinedExtractor(
            (extractors): ModuleDict(
              (achieved_goal): Flatten(start_dim=1, end_dim=-1)
              (desired_goal): Flatten(start_dim=1, end_dim=-1)
              (observation): Flatten(start_dim=1, end_dim=-1)
            )
          )
          (qf0): Sequential(
            (0): Linear(in_features=29, out_features=400, bias=True)
            (1): ReLU()
            (2): Linear(in_features=400, out_features=300, bias=True)
            (3): ReLU()
            (4): Linear(in_features=300, out_features=1, bias=True)
          )
        )
device:
    value: cuda
env:
    value: <stable_baselines3.common.vec_env.vec_video_recorder.VecVideoRecorder object at 0x7468fb5824d0>
env_name:
    value: JengaSimplePickAndPlace-v3
ep_info_buffer:
    value: deque([], maxlen=100)
ep_success_buffer:
    value: deque([], maxlen=100)
gamma:
    value: 0.99
gradient_steps:
    value: 1
learning_rate:
    value: 0.001
learning_starts:
    value: 100
lr_schedule:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x7468f8b2a560>
n_envs:
    value: 16
num_timesteps:
    value: 0
observation_space:
    value: 'Dict(''achieved_goal'': Box(-10.0, 10.0, (3,), float32), ''desired_goal'': Box(-10.0, 10.0, (3,), float32), ''observation'': Box(-10.0, 10.0, (19,), float32))'
optimize_memory_usage:
    value: "False"
policy:
    value: |-
        MultiInputPolicy(
          (actor): Actor(
            (features_extractor): CombinedExtractor(
              (extractors): ModuleDict(
                (achieved_goal): Flatten(start_dim=1, end_dim=-1)
                (desired_goal): Flatten(start_dim=1, end_dim=-1)
                (observation): Flatten(start_dim=1, end_dim=-1)
              )
            )
            (mu): Sequential(
              (0): Linear(in_features=25, out_features=400, bias=True)
              (1): ReLU()
              (2): Linear(in_features=400, out_features=300, bias=True)
              (3): ReLU()
              (4): Linear(in_features=300, out_features=4, bias=True)
              (5): Tanh()
            )
          )
          (actor_target): Actor(
            (features_extractor): CombinedExtractor(
              (extractors): ModuleDict(
                (achieved_goal): Flatten(start_dim=1, end_dim=-1)
                (desired_goal): Flatten(start_dim=1, end_dim=-1)
                (observation): Flatten(start_dim=1, end_dim=-1)
              )
            )
            (mu): Sequential(
              (0): Linear(in_features=25, out_features=400, bias=True)
              (1): ReLU()
              (2): Linear(in_features=400, out_features=300, bias=True)
              (3): ReLU()
              (4): Linear(in_features=300, out_features=4, bias=True)
              (5): Tanh()
            )
          )
          (critic): ContinuousCritic(
            (features_extractor): CombinedExtractor(
              (extractors): ModuleDict(
                (achieved_goal): Flatten(start_dim=1, end_dim=-1)
                (desired_goal): Flatten(start_dim=1, end_dim=-1)
                (observation): Flatten(start_dim=1, end_dim=-1)
              )
            )
            (qf0): Sequential(
              (0): Linear(in_features=29, out_features=400, bias=True)
              (1): ReLU()
              (2): Linear(in_features=400, out_features=300, bias=True)
              (3): ReLU()
              (4): Linear(in_features=300, out_features=1, bias=True)
            )
          )
          (critic_target): ContinuousCritic(
            (features_extractor): CombinedExtractor(
              (extractors): ModuleDict(
                (achieved_goal): Flatten(start_dim=1, end_dim=-1)
                (desired_goal): Flatten(start_dim=1, end_dim=-1)
                (observation): Flatten(start_dim=1, end_dim=-1)
              )
            )
            (qf0): Sequential(
              (0): Linear(in_features=29, out_features=400, bias=True)
              (1): ReLU()
              (2): Linear(in_features=400, out_features=300, bias=True)
              (3): ReLU()
              (4): Linear(in_features=300, out_features=1, bias=True)
            )
          )
        )
policy_class:
    value: <class 'stable_baselines3.td3.policies.MultiInputPolicy'>
policy_delay:
    value: 1
policy_kwargs:
    value: '{''net_arch'': [400, 300], ''n_critics'': 1}'
policy_type:
    value: MultiInputPolicy
replay_buffer:
    value: <stable_baselines3.her.her_replay_buffer.HerReplayBuffer object at 0x7468fb5dd1b0>
replay_buffer_class:
    value: <class 'stable_baselines3.her.her_replay_buffer.HerReplayBuffer'>
replay_buffer_kwargs:
    value: '{''n_sampled_goal'': 4, ''goal_selection_strategy'': ''future''}'
sde_sample_freq:
    value: -1
seed:
    value: None
start_time:
    value: 1734375273986374050
target_noise_clip:
    value: 0
target_policy_noise:
    value: 0.1
tau:
    value: 0.005
tensorboard_log:
    value: runs/g903i3gc
total_timesteps:
    value: 1.6e+06
train_freq:
    value: 'TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: ''step''>)'
use_sde:
    value: "False"
use_sde_at_warmup:
    value: "False"
verbose:
    value: 1
