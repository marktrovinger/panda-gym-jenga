diff --git a/panda_gym_jenga/envs/jenga_tasks.py b/panda_gym_jenga/envs/jenga_tasks.py
index 5fcb0d7..960dbf9 100644
--- a/panda_gym_jenga/envs/jenga_tasks.py
+++ b/panda_gym_jenga/envs/jenga_tasks.py
@@ -193,7 +193,7 @@ class JengaSimplePickAndPlaceDeterministicEnv(RobotTaskEnv):
         robot = Panda(sim, block_gripper=False, base_position=np.array([-0.6, 0.0, 0.0]), control_type=control_type)
         task = JengaSimplePickAndPlace(sim, reward_type=reward_type, object_size=object_size)   
         self.is_action_completed = False  
-        self.deterministic_action_space = Discrete(4,)                      
+        self.action_space = Discrete(4,)                      
         super().__init__(                                                                                           
             robot,                                                                                                  
             task,                                                                                                   
diff --git a/scripts/test_deterministic.py b/scripts/test_deterministic.py
index 8e836d0..25bd2ab 100644
--- a/scripts/test_deterministic.py
+++ b/scripts/test_deterministic.py
@@ -1,5 +1,6 @@
 import panda_gym
 import gymnasium as gym
+from gymnasium.spaces import Discrete
 import panda_gym_jenga
 from gymnasium.wrappers import RecordVideo
 
@@ -11,7 +12,8 @@ def main():
     
     obs, done = env.reset()
     action_space = env.action_space
-
+    env.action_space = Discrete(4)
+    print(f"Action space: {env.action_space}")
     obs, reward, terminated, truncated, info = env.step(0)
     print(f"Reward = {reward}")
     #env.step(2)
diff --git a/scripts/test_deterministic_dqn.py b/scripts/test_deterministic_dqn.py
index 52ca8d8..8901807 100644
--- a/scripts/test_deterministic_dqn.py
+++ b/scripts/test_deterministic_dqn.py
@@ -15,7 +15,8 @@ config = {
     }
 def make_env():
     env = gym.make(config["env_name"])
-    env = Monitor(env)  # record stats such as returns
+    #env.action_space = gym.spaces.Discrete(4)
+    #env = Monitor(env)  # record stats such as returns
     return env
 
 def main():
